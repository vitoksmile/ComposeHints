// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, wasmJs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <ComposeHints:hints>
final enum class com.viktormykhailiv.compose.hints/HintAnchorAnimationMode : kotlin/Enum<com.viktormykhailiv.compose.hints/HintAnchorAnimationMode> { // com.viktormykhailiv.compose.hints/HintAnchorAnimationMode|null[0]
    enum entry Follow // com.viktormykhailiv.compose.hints/HintAnchorAnimationMode.Follow|null[0]
    enum entry Scale // com.viktormykhailiv.compose.hints/HintAnchorAnimationMode.Scale|null[0]

    final val entries // com.viktormykhailiv.compose.hints/HintAnchorAnimationMode.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.viktormykhailiv.compose.hints/HintAnchorAnimationMode> // com.viktormykhailiv.compose.hints/HintAnchorAnimationMode.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): com.viktormykhailiv.compose.hints/HintAnchorAnimationMode // com.viktormykhailiv.compose.hints/HintAnchorAnimationMode.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.viktormykhailiv.compose.hints/HintAnchorAnimationMode> // com.viktormykhailiv.compose.hints/HintAnchorAnimationMode.values|values#static(){}[0]
}

final class com.viktormykhailiv.compose.hints/Hint // com.viktormykhailiv.compose.hints/Hint|null[0]

final class com.viktormykhailiv.compose.hints/HintAnchorState // com.viktormykhailiv.compose.hints/HintAnchorState|null[0]

final class com.viktormykhailiv.compose.hints/HintController { // com.viktormykhailiv.compose.hints/HintController|null[0]
    final fun dismiss() // com.viktormykhailiv.compose.hints/HintController.dismiss|dismiss(){}[0]
    final suspend fun show(com.viktormykhailiv.compose.hints/HintAnchorState) // com.viktormykhailiv.compose.hints/HintController.show|show(com.viktormykhailiv.compose.hints.HintAnchorState){}[0]
    final suspend fun show(kotlin.collections/List<com.viktormykhailiv.compose.hints/HintAnchorState>) // com.viktormykhailiv.compose.hints/HintController.show|show(kotlin.collections.List<com.viktormykhailiv.compose.hints.HintAnchorState>){}[0]
    final suspend fun show(kotlin/Array<out com.viktormykhailiv.compose.hints/HintAnchorState>...) // com.viktormykhailiv.compose.hints/HintController.show|show(kotlin.Array<out|com.viktormykhailiv.compose.hints.HintAnchorState>...){}[0]
}

final object com.viktormykhailiv.compose.hints/HintAnimationDefaults { // com.viktormykhailiv.compose.hints/HintAnimationDefaults|null[0]
    final fun anchorAnimationMode(): com.viktormykhailiv.compose.hints/HintAnchorAnimationMode // com.viktormykhailiv.compose.hints/HintAnimationDefaults.anchorAnimationMode|anchorAnimationMode(){}[0]
    final fun anchorOffsetAnimationSpec(): androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Offset> // com.viktormykhailiv.compose.hints/HintAnimationDefaults.anchorOffsetAnimationSpec|anchorOffsetAnimationSpec(){}[0]
    final fun anchorSizeAnimationSpec(): androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Size> // com.viktormykhailiv.compose.hints/HintAnimationDefaults.anchorSizeAnimationSpec|anchorSizeAnimationSpec(){}[0]
    final fun enterTransition(): androidx.compose.animation/EnterTransition // com.viktormykhailiv.compose.hints/HintAnimationDefaults.enterTransition|enterTransition(){}[0]
    final fun exitTransition(): androidx.compose.animation/ExitTransition // com.viktormykhailiv.compose.hints/HintAnimationDefaults.exitTransition|exitTransition(){}[0]
}

final val com.viktormykhailiv.compose.hints/LocalAnchorAnimationMode // com.viktormykhailiv.compose.hints/LocalAnchorAnimationMode|{}LocalAnchorAnimationMode[0]
    final fun <get-LocalAnchorAnimationMode>(): androidx.compose.runtime/ProvidableCompositionLocal<com.viktormykhailiv.compose.hints/HintAnchorAnimationMode> // com.viktormykhailiv.compose.hints/LocalAnchorAnimationMode.<get-LocalAnchorAnimationMode>|<get-LocalAnchorAnimationMode>(){}[0]
final val com.viktormykhailiv.compose.hints/LocalAnchorOffsetAnimationSpec // com.viktormykhailiv.compose.hints/LocalAnchorOffsetAnimationSpec|{}LocalAnchorOffsetAnimationSpec[0]
    final fun <get-LocalAnchorOffsetAnimationSpec>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Offset>> // com.viktormykhailiv.compose.hints/LocalAnchorOffsetAnimationSpec.<get-LocalAnchorOffsetAnimationSpec>|<get-LocalAnchorOffsetAnimationSpec>(){}[0]
final val com.viktormykhailiv.compose.hints/LocalAnchorSizeAnimationSpec // com.viktormykhailiv.compose.hints/LocalAnchorSizeAnimationSpec|{}LocalAnchorSizeAnimationSpec[0]
    final fun <get-LocalAnchorSizeAnimationSpec>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Size>> // com.viktormykhailiv.compose.hints/LocalAnchorSizeAnimationSpec.<get-LocalAnchorSizeAnimationSpec>|<get-LocalAnchorSizeAnimationSpec>(){}[0]
final val com.viktormykhailiv.compose.hints/LocalHintOverlayBrush // com.viktormykhailiv.compose.hints/LocalHintOverlayBrush|{}LocalHintOverlayBrush[0]
    final fun <get-LocalHintOverlayBrush>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.ui.graphics/Brush?> // com.viktormykhailiv.compose.hints/LocalHintOverlayBrush.<get-LocalHintOverlayBrush>|<get-LocalHintOverlayBrush>(){}[0]
final val com.viktormykhailiv.compose.hints/LocalHintOverlayColor // com.viktormykhailiv.compose.hints/LocalHintOverlayColor|{}LocalHintOverlayColor[0]
    final fun <get-LocalHintOverlayColor>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.ui.graphics/Color> // com.viktormykhailiv.compose.hints/LocalHintOverlayColor.<get-LocalHintOverlayColor>|<get-LocalHintOverlayColor>(){}[0]
final val com.viktormykhailiv.compose.hints/LocalHintOverlayEnterTransition // com.viktormykhailiv.compose.hints/LocalHintOverlayEnterTransition|{}LocalHintOverlayEnterTransition[0]
    final fun <get-LocalHintOverlayEnterTransition>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.animation/EnterTransition> // com.viktormykhailiv.compose.hints/LocalHintOverlayEnterTransition.<get-LocalHintOverlayEnterTransition>|<get-LocalHintOverlayEnterTransition>(){}[0]
final val com.viktormykhailiv.compose.hints/LocalHintOverlayExitTransition // com.viktormykhailiv.compose.hints/LocalHintOverlayExitTransition|{}LocalHintOverlayExitTransition[0]
    final fun <get-LocalHintOverlayExitTransition>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.animation/ExitTransition> // com.viktormykhailiv.compose.hints/LocalHintOverlayExitTransition.<get-LocalHintOverlayExitTransition>|<get-LocalHintOverlayExitTransition>(){}[0]
final val com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_Hint$stableprop // com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_Hint$stableprop|#static{}com_viktormykhailiv_compose_hints_Hint$stableprop[0]
final val com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintAnchorState$stableprop // com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintAnchorState$stableprop|#static{}com_viktormykhailiv_compose_hints_HintAnchorState$stableprop[0]
final val com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintAnimationDefaults$stableprop // com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintAnimationDefaults$stableprop|#static{}com_viktormykhailiv_compose_hints_HintAnimationDefaults$stableprop[0]
final val com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintController$stableprop // com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintController$stableprop|#static{}com_viktormykhailiv_compose_hints_HintController$stableprop[0]

final fun (androidx.compose.ui/Modifier).com.viktormykhailiv.compose.hints/hintAnchor(com.viktormykhailiv.compose.hints/HintAnchorState, androidx.compose.ui.graphics/Shape = ..., androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Size>? = ..., androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Offset>? = ...): androidx.compose.ui/Modifier // com.viktormykhailiv.compose.hints/hintAnchor|hintAnchor@androidx.compose.ui.Modifier(com.viktormykhailiv.compose.hints.HintAnchorState;androidx.compose.ui.graphics.Shape;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.geometry.Size>?;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.geometry.Offset>?){}[0]
final fun com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_Hint$stableprop_getter(): kotlin/Int // com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_Hint$stableprop_getter|com_viktormykhailiv_compose_hints_Hint$stableprop_getter(){}[0]
final fun com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintAnchorState$stableprop_getter(): kotlin/Int // com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintAnchorState$stableprop_getter|com_viktormykhailiv_compose_hints_HintAnchorState$stableprop_getter(){}[0]
final fun com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintAnimationDefaults$stableprop_getter(): kotlin/Int // com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintAnimationDefaults$stableprop_getter|com_viktormykhailiv_compose_hints_HintAnimationDefaults$stableprop_getter(){}[0]
final fun com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintController$stableprop_getter(): kotlin/Int // com.viktormykhailiv.compose.hints/com_viktormykhailiv_compose_hints_HintController$stableprop_getter|com_viktormykhailiv_compose_hints_HintController$stableprop_getter(){}[0]
final fun com.viktormykhailiv.compose.hints/rememberHint(kotlin/Function3<androidx.compose.animation/AnimatedVisibilityScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int): com.viktormykhailiv.compose.hints/Hint // com.viktormykhailiv.compose.hints/rememberHint|rememberHint(kotlin.Function3<androidx.compose.animation.AnimatedVisibilityScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun com.viktormykhailiv.compose.hints/rememberHintAnchorState(com.viktormykhailiv.compose.hints/Hint, androidx.compose.runtime/Composer?, kotlin/Int): com.viktormykhailiv.compose.hints/HintAnchorState // com.viktormykhailiv.compose.hints/rememberHintAnchorState|rememberHintAnchorState(com.viktormykhailiv.compose.hints.Hint;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun com.viktormykhailiv.compose.hints/rememberHintController(androidx.compose.ui.graphics/Brush, androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, com.viktormykhailiv.compose.hints/HintAnchorAnimationMode?, androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Size>?, androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Offset>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): com.viktormykhailiv.compose.hints/HintController // com.viktormykhailiv.compose.hints/rememberHintController|rememberHintController(androidx.compose.ui.graphics.Brush;androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;com.viktormykhailiv.compose.hints.HintAnchorAnimationMode?;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.geometry.Size>?;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.geometry.Offset>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.viktormykhailiv.compose.hints/rememberHintController(androidx.compose.ui.graphics/Color, androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, com.viktormykhailiv.compose.hints/HintAnchorAnimationMode?, androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Size>?, androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Offset>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): com.viktormykhailiv.compose.hints/HintController // com.viktormykhailiv.compose.hints/rememberHintController|rememberHintController(androidx.compose.ui.graphics.Color;androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;com.viktormykhailiv.compose.hints.HintAnchorAnimationMode?;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.geometry.Size>?;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.geometry.Offset>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
